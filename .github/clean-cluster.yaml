name: Clean Helm/ArgoCD Running Deployments

on:
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup google cloud service account credentials
        run: | 
          echo '${{ secrets.GCP_SA_KEY }}' | base64 --decode > /tmp/key.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/key.json" >> $GITHUB_ENV

      - name: Install gcloud CLI # for cli commands
        uses: google-github-actions/setup-gcloud@v1

      - name: login to gcloud # using service account as a credential to login to gcloud cli.
        run: |
          gcloud auth activate-service-account --key-file=/tmp/key.json

      - name: Install Helm
        run: |
            curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
            helm version

      - name: install GKE google plugin
        run: |
            gcloud components install gke-gcloud-auth-plugin
          
      - name: Set GKE Context to connect to cluster
        run: |
            gcloud container clusters get-credentials \
              ${{ secrets.GCP_CLUSTER_NAME }} \
              --project ${{ secrets.GCP_PROJECT_ID }} \
              --zone ${{ secrets.GCP_ZONE }}

      - name: Cleanup Helm Releases
        run: |
          set -x  # enable debugging
          
          cleanup_helm_release() {
            
            release=$1
            namespace=$2
            
            echo "Checking status of Helm release '$release' in namespace '$namespace'..."
            
            if helm status "$release" -n "$namespace"; then
              echo "Release '$release' found. Deleting..."
              helm uninstall "$release" -n "$namespace"
              echo "Successfully deleted Helm release '$release' in namespace '$namespace'."
            else
              echo "Helm release '$release' not found in namespace '$namespace'. Skipping."
            fi
          }

          cleanup_helm_release "release" "default"
          cleanup_helm_release "loki" "log"
          cleanup_helm_release "my-monitoring" "monitor"

      #- name: Cleanup ArgoCD Deployments

