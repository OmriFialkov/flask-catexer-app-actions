# Ingress for the Flask app in the default namespace
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flask-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  ingressClassName: nginx
  rules:
  - host: app.omri.com 
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: flask-app-service
            port:
              number: 80
---
# Ingress for ArgoCD in the argocd namespace
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-ingress
  namespace: argocd
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  ingressClassName: nginx
  rules:
  - host: argocd.omri.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              number: 80
---
# Ingress for Prometheus and Grafana in the monitor namespace
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monitor-ingress
  namespace: monitor
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  ingressClassName: nginx
  rules:
  - host: prometheus.omri.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: monitor-stack-prometheus-server
            port:
              number: 80
  - host: grafana.omri.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: monitor-stack-grafana
            port:
              number: 80


# apiVersion: v1 - didnt work!!!!!!
# kind: Service
# metadata:
#   name: grafana-external
#   namespace: default
# spec:
#   type: ExternalName
#   externalName: monitor-stack-grafana.monitor.svc.cluster.local  # Points to Grafana in "monitor"
#   ports:
#     - port: 80