prometheus:
  service:
    type: ClusterIP
  server:
    persistentVolume:
      enabled: false  # Disable PV for simplicity
    extraScrapeConfigs:
      - job_name: 'flask-app'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - default  # The namespace where your Flask app is deployed
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_label_app]
            action: keep
            regex: flask-app  # Match the label of your Flask app service
          - source_labels: [__meta_kubernetes_endpoint_port_name]
            action: keep
            regex: http  # Match the port name of your Flask app service
        metrics_path: /metrics  # The Flask metrics endpoint
        scheme: http  # Use http (or https if your app uses TLS)
        scrape_interval: 15s  # Scrape every 15 seconds (adjust as needed)


grafana:
  grafana.ini:
    date_format:
      default_timezone: "browser"
  service:
    type: ClusterIP
  persistence:
    enabled: false  # Disable PV for simplicity
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://monitor-stack-prometheus-server.monitor.svc.cluster.local  # Update if needed
          access: proxy
          isDefault: true
        - name: loki-auto
          type: loki
          uid: loki-omri
          url: http://loki.log.svc.cluster.local:3100
          access: proxy
          isDefault: false
          jsonData:
            maxLines: 1000
  sidecar:
    dashboards:
      enabled: true        # Enable the sidecar that automatically imports dashboards
      label: grafana_dashboard  # Specify the label that the sidecar will use to pick up dashboards
      label_value: "1"     